# VotiNobel
Esercitazione sulla ricorsione TdP 17/04.

### Scopo dell'esercitazione

Per patecipare all'edizione *Nobel 2018* dell'ateneo, in fase di iscrizione è necessario specificare un sottoinsieme di esami
sotitenuti, per un totale di *m* crediti, con la media dei voti più alta. La variabile *m* varia di anno in anno in base alle
specifiche del concorso.

Realizzare un programma in Java dotato di interfaccia grafica che permetta di trovare il sottoinsieme di esami sostenuti di *m*
crediti con la media più alta. Utilizzare un algoritmo ricorsivo per implementare la soluzione.

### Progetto Eclipse

Uitilizzare il progetto base del branch *master*.

### Database

Un database con alcuni esami del croso di laurea triennale è disponibile nella cartella db.
[esamitriennale.sql](https://github.com/TdP-2018/VotiNobel/raw/master/VotiNobel/db/esamitriennale.sql)

Utilizzare la classe [PopulateDB.java](https://github.com/TdP-2018/VotiNobel/blob/master/VotiNobel/src/it/polito/tdp/dao/PopulateDB.java)
per aggiornare il DB con i propri voti.



PIANO DI RISOLUZIONE

INPUT set esami di partenza
OUTPUT et di Esame, sottoinsieme di quello di partenza, per cui:
-sommaEsame.crediti==0
media Esame.voto MAX

Strategia: generare tutti i possibili sottoinsiemi dell'insieme di partenza

#Approccio 1: genero l'insieme decidendo, corso per corso, se eso fa parte dell'insieme

Livello L della ricorsione: quale corso sto decidendo se includere o meno nell'insieme soluzione

Soluzione parziale: un sottoinsieme coposto dai corsi tra 0 e L-1

Es: soluzione parziale{0, 3}
	soluzione parziale{0, 1, 2, 3}
	soluzione parziale{ }
	
	Generazione del sottoproblema: decidere se inserire Esame[L] oppure no
	1. sotto problema = soluzione parziale (non aggiungo)
	2. sottproblema= soluzione parziale + (L)
	
	
	Casi terminali:
	
	- L=max : non ci sono più corsi
		-somma crediti==m ---> calcola media
		-somma crediti!=m ---> niente
		
	-somma crediti==m
		-valuta media
		-non genera sotto-problemi
	
	-somma crediti>m
		-esce, non genera sotto-problemi
		
		
	Cosa faccio nel casoterminale?
	-se sommo crediti!= m => return;
	-se sommo crediti == m, valuta media
		-la media è migliore della miglio media conosciuta?
			-sì: soluzione corrente diventa il "best"
			-no: niente
			RICORDA: quando si sostituisce il nuovo best, bisogna fare .clone
			
			
COMPLESSITA': 2^N
			
			
				
#Approccio 2: ad ogni livello aggiungo un corso. Devo decidere quale

Soluzione parziale al livello L: insieme di L corsi

Generazione del sottoproblema: aggiungre un nuovo corso all'insieme esistente

Per tutti i corsi (i) possibili (non ancora nell'insieme)
	-sottopoblema = parziale + corso(i)

Casi terminali: vedi sopra

Complessità: N!


ACCORTEZZA: permettere solo sequenze CRESCENTI di esami

